joint_state_controller:
    type: "joint_state_controller/JointStateController"
    publish_rate: 100

diff_drive_controller:
    type: "diff_drive_controller/DiffDriveController"
    publish_rate: 100

    left_wheel: ['wheel_left_front_joint', 'wheel_left_rear_joint']
    right_wheel: ['wheel_right_front_joint','wheel_right_rear_joint']

    wheel_separation: 0.9
    wheel_radius: 0.25
    wheel_torque: 50
    # Odometry covariances for the encoder output of the robot. These values should
    # be tuned to your robot's sample odometry data, but these values are a good place
    # to start
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    # Publish final output diff_drive_controller/cmd_vel_out
    publish_cmd: true

    # Base frame_id 
    base_frame_id: base_footprint

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    enable_odom_tf: true

    # Velocity and acceleration limits for the robot
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 0.35  # m/s
        has_acceleration_limits: true
        max_acceleration       : 0.35  # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 1.4   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 1.4   # rad/s^2